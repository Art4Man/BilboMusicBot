name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build Docker image
      run: |
        docker buildx build --platform linux/amd64 -t bilbomusicbot:latest .
        
    - name: Test Docker image
      run: |
        docker run --rm bilbomusicbot:latest python -c "import bot; print('Import successful')"

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      run: |
        docker buildx build --platform linux/amd64,linux/arm64 \
          -t ${{ secrets.DOCKER_USERNAME }}/bilbomusicbot:latest \
          -t ${{ secrets.DOCKER_USERNAME }}/bilbomusicbot:${{ github.ref_name }} \
          --push .
        
    - name: Prepare server for deployment
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /opt/bilbomusicbot
          docker-compose pull
          
  deploy:
    needs: release
    runs-on: self-hosted
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          cd /opt/bilbomusicbot
          docker-compose down
          docker-compose up -d
          docker system prune -f